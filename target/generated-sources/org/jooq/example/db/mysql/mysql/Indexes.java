/*
 * This file is generated by jOOQ.
 */
package org.jooq.example.db.mysql.mysql;


import javax.annotation.Generated;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.example.db.mysql.tables.Author;
import org.jooq.example.db.mysql.tables.Book;
import org.jooq.example.db.mysql.tables.Quote;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables of the <code>trade</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index AUTHOR_FIRST_NAME = Indexes0.AUTHOR_FIRST_NAME;
    public static final Index AUTHOR_PRIMARY = Indexes0.AUTHOR_PRIMARY;
    public static final Index BOOK_AUTHOR_ID = Indexes0.BOOK_AUTHOR_ID;
    public static final Index BOOK_PRIMARY = Indexes0.BOOK_PRIMARY;
    public static final Index BOOK_TITLE = Indexes0.BOOK_TITLE;
    public static final Index QUOTE_PRIMARY = Indexes0.QUOTE_PRIMARY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index AUTHOR_FIRST_NAME = Internal.createIndex("first_name", Author.AUTHOR, new OrderField[] { Author.AUTHOR.FIRST_NAME, Author.AUTHOR.LAST_NAME }, true);
        public static Index AUTHOR_PRIMARY = Internal.createIndex("PRIMARY", Author.AUTHOR, new OrderField[] { Author.AUTHOR.ID }, true);
        public static Index BOOK_AUTHOR_ID = Internal.createIndex("author_id", Book.BOOK, new OrderField[] { Book.BOOK.AUTHOR_ID }, false);
        public static Index BOOK_PRIMARY = Internal.createIndex("PRIMARY", Book.BOOK, new OrderField[] { Book.BOOK.ID }, true);
        public static Index BOOK_TITLE = Internal.createIndex("title", Book.BOOK, new OrderField[] { Book.BOOK.TITLE }, true);
        public static Index QUOTE_PRIMARY = Internal.createIndex("PRIMARY", Quote.QUOTE, new OrderField[] { Quote.QUOTE.ID }, true);
    }
}
